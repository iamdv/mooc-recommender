'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _materialUi = require('material-ui');

var _styles = require('material-ui/styles');

var _svgIcons = require('material-ui/svg-icons');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  disabled: {
    pointerEvents: 'none'
  }
};

var Rating = function (_Component) {
  _inherits(Rating, _Component);

  function Rating(props) {
    _classCallCheck(this, Rating);

    var _this = _possibleConstructorReturn(this, (Rating.__proto__ || Object.getPrototypeOf(Rating)).call(this, props));

    _this.state = {
      hoverValue: props.value
    };
    return _this;
  }

  _createClass(Rating, [{
    key: 'renderIcon',
    value: function renderIcon(i) {
      var filled = i <= this.props.value;
      var hovered = i <= this.state.hoverValue;

      if (hovered && !filled || !hovered && filled) {
        return this.props.iconHovered;
      } else if (filled) {
        return this.props.iconFilled;
      } else {
        return this.props.iconNormal;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var rating = [];

      var _loop = function _loop(i) {
        rating.push(_react2.default.createElement(
          _materialUi.IconButton,
          {
            key: i,
            disabled: _this2.props.disabled,
            iconStyle: _this2.props.itemIconStyle,
            style: _this2.props.itemStyle,
            onMouseEnter: function onMouseEnter() {
              return _this2.setState({ hoverValue: i });
            },
            onMouseLeave: function onMouseLeave() {
              return _this2.setState({ hoverValue: _this2.props.value });
            },
            onTouchTap: function onTouchTap() {
              return _this2.props.onChange(i);
            }
          },
          _this2.renderIcon(i)
        ));
      };

      for (var i = 1; i <= this.props.max; i++) {
        _loop(i);
      }

      return _react2.default.createElement(
        'div',
        {
          style: this.props.disabled || this.props.readOnly ? _extends({}, styles.disabled, this.props.style) : this.props.style
        },
        rating
      );
    }
  }]);

  return Rating;
}(_react.Component);

exports.default = Rating;


Rating.defaultProps = {
  disabled: false,
  iconFilled: _react2.default.createElement(_svgIcons.ToggleStar, { color: _styles.colors.orange500 }),
  iconHovered: _react2.default.createElement(_svgIcons.ToggleStarBorder, { color: _styles.colors.orange500 }),
  iconNormal: _react2.default.createElement(_svgIcons.ToggleStarBorder, { color: _styles.colors.grey300 }),
  max: 5,
  readOnly: false,
  value: 0
};

Rating.propTypes = {
  disabled: _propTypes2.default.bool,
  iconFilled: _propTypes2.default.node,
  iconHovered: _propTypes2.default.node,
  iconNormal: _propTypes2.default.node,
  itemStyle: _propTypes2.default.object,
  itemIconStyle: _propTypes2.default.object,
  max: _propTypes2.default.number,
  onChange: _propTypes2.default.func.isRequired,
  readOnly: _propTypes2.default.bool,
  style: _propTypes2.default.object,
  value: _propTypes2.default.number
};